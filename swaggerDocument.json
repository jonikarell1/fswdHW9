{
  "openapi": "3.0.1",
  "info": {
    "title": "Swagger Simple Template",
    "description": "Movies API Documentation",
    "version": "1.0.0"
  },
  "servers": [{
    "url": "http://localhost:3000"
  }],
  "tags": [{
    "name": "movies",
    "description": "Movies Managing API"
  }],
  "paths": {
    "/movies": {
      "get": {
        "description": "return list of movies",
        "tags": ["Movies"],

        "responses": {
          "200": {
            "description": "Created a new Movies",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Movies",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some server error"
          }
        },
        "security": [{
          "ApiKeyAuth": []
        }]

      },
      "post": {
        "description": "add a neaw movies",
        "tags": ["Movies"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created a new Movies",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some server error"
          }
        },
        "security": [{
          "ApiKeyAuth": []
        }]
      }
    },
    "/movies/{moviesId}": {
      "get": {
        "description": "find movies by ID",
        "tags": ["Movies"],
        "operationId": "getMoviesById",
        "parameters": [{
          "name": "moviesId",
          "in": "path",
          "description": "ID of movies to return",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int4"
          }
        }],
        "responses": {
          "200": {
            "description": "Get a  Movies",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Some server error"
          }
        },
        "security": [{
          "ApiKeyAuth": []
        }]
      },
      "put": {
        "description": "update byId",
        "operationId": "updateMoviesWithForm",
        "tags": ["Movies"],
        "parameters": [{
            "name": "moviesId",
            "in": "path",
            "description": "ID of movies that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int4"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "title of movies that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "genres",
            "in": "query",
            "description": "genres of movies that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "year of movies that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted a Movies",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some server error"
          }
        },
        "security": [{
          "ApiKeyAuth": []
        }]
      },
      "delete": {
        "description": "delete By ID movies",
        "operationId": "deleteMovies",
        "tags": ["Movies"],
        "parameters": [{
          "name": "moviesId",
          "in": "path",
          "description": "ID of movies to delete",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int4"
          }
        }],
        "responses": {
          "200": {
            "description": "Deleted a Movies",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some server error"
          }
        },
        "security": [{
          "ApiKeyAuth": []
        }]
      }
    },
    "/register": {
      "post": {
        "description": "Register data",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created a new User",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "return list of users",
        "tags": ["Users"],

        "responses": {
          "200": {
            "description": "return list of Movies",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Users",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some server error"
          }
        },
        "security": [{
          "ApiKeyAuth": []
        }]

      }
    },
    "/users/{usersId}": {
      "get": {
        "description": "find users by ID",
        "tags": ["Users"],
        "operationId": "getUsersById",
        "parameters": [{
          "name": "usersId",
          "in": "path",
          "description": "ID of users to return",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int4"
          }
        }],
        "responses": {
          "200": {
            "description": "Get a  Movies",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Some server error"
          }
        },
        "security": [{
          "ApiKeyAuth": []
        }]
      },
      "put": {
        "description": "update byId",
        "operationId": "updateMoviesWithForm",
        "tags": ["Users"],
        "parameters": [{
            "name": "usersId",
            "in": "path",
            "description": "ID of movies that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int4"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "email of user that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "gender of user that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "password of user that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "role of user that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "update a User",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some server error"
          }
        },
        "security": [{
          "ApiKeyAuth": []
        }]
      },
      "delete": {
        "description": "delete user By ID description",
        "operationId": "deleteUsers",
        "tags": ["Users"],
        "parameters": [{
          "name": "usersId",
          "in": "path",
          "description": "ID of users to delete",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int4"
          }
        }],
        "responses": {
          "200": {
            "description": "Deleted a User",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some server error"
          }
        },
        "security": [{
          "ApiKeyAuth": []
        }]
      }

    },
    "/login": {
      "post": {
        "description": "Login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created a new User",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some server error"
          }
        }
      }
    }

  },
  "components": {
    "schemas": {
      "Movies": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "genres": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "Auth": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "pass": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "token"
      }
    }
  }


}